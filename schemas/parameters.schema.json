{
  "title": "Simulation parameters",
  "description": "Parameters of a simulation run",
  "type": "object",
  "required": ["code", "scenario", "limit", "seed", "date", "visualisation_output", "kpi_output",
    "dynamic_input_file", "init_input_file", "topologies"],
  "properties": {
    "code": {
      "type": "string",
      "title": "Model code",
      "description": "Code of the simulation model to be run"
    },
    "scenario": {
      "type": "string",
      "title": "Scenario name",
      "description": "Name of the scenario simulated",
      "example": "example_scenario"
    },
    "limit": {
      "type": "integer",
      "title": "Simulation time limit [seconds]",
      "description": "Duration of the simulation",
      "minimum": 1,
      "default": 86400
    },
    "date": {
      "type": "string",
      "title": "Simulation date",
      "description": "Date of the simulation, used for filtering services. Format YYYY-MM-DD",
      "format": "date",
      "example": "2019-10-28"
    },
    "dynamic_input_file": {
      "type": ["string", "null"],
      "title": "Dynamic input file",
      "description": "Name of the file containing the dynamic input",
      "example": "CS_SB_dynamic_input.geojson"
    },
    "init_input_file": {
      "type": ["string", "array", "null"],
      "title": "Initialisation input file",
      "description": "Name of the file containing the initialisation input or list of file names",
      "example": "CS_SB_init_input.geojson"
    },
    "topologies": {
      "type": "object",
      "title": "Topologies",
      "description": "Files for initialising the topologies",
      "properties": {
        "additional_properties": {
          "description": "Array of two string items, the network file and the speeds file",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 2,
          "maxItems": 2
        }
      },
      "required": ["walk"]
    },
    "gtfs_timetables": {
      "type": "string",
      "title": "GTFS timetables archive",
      "description": "Name of the archive containing the gtfs timetables, placed in the GTFS feeds folder",
      "pattern": "(.)*(.zip)",
      "example": "GTFS_nantes.zip"
    },
    "visualisation_output": {
      "type": "boolean",
      "title": "Visualisation output",
      "description": "Generate a visualisation file",
      "default": true
    },
    "kpi_output": {
      "type": "boolean",
      "title": "KPI output",
      "description": "Generate a KPI file",
      "default": true
    },
    "traces_output": {
      "type": "boolean",
      "title": "Traces output",
      "description": "Generate agent traces output",
      "default": false
    },
    "seed": {
      "type": "number",
      "title": "Random seed",
      "description": "Seed used for the generation of random events",
      "default": 42
    },
    "time_log": {
      "advanced": true,
      "type": "boolean",
      "title": "Simulation time log",
      "description": "Log simulation time every 3600 seconds (used for run monitoring)",
      "default": false
    },
    "generate_summary": {
      "advanced": true,
      "title": "Generate run summary",
      "description": "Generate a simulation run summary",
      "type": "boolean",
      "default": false
    },
    "early_dynamic_input": {
      "advanced":  true,
      "type": "integer",
      "title": "Early dynamic input offset [seconds]",
      "description": "Offset applied to the users origin time to make them enter the simulation earlier, in seconds",
      "example": 3600,
      "default": 0
    },
    "make_static": {
      "advanced":  true,
      "type": "string",
      "title": "Make inputs static",
      "description": "Make certain inputs static, ie generate them at the beginning of the simulation. ",
      "oneOf": [
        {
          "const": "all",
          "description": "Make all inputs static."
        },
        {
          "const": "prebooked",
          "description": "Make static the inputs with prebooked==True."
        },
        {
          "const": "prebooked_only",
          "description": "Make static the inputs with prebooked==True and don't generate the others."
        },
        {
          "const": "ghosts",
          "description": "Make all inputs static for the resolution, then remove prebooked from solution and insert them dynamically."
        }
      ]
    },
    "store_paths": {
      "advanced":  true,
      "title": "Store shortest paths",
      "description": "Store computed shortest paths in a dict to avoid computing them again. Either a boolean or a dict with the same keys as topologies and boolean values.",
      "type": [
        "boolean",
        "object"
      ],
      "default": false
    }
  }
}